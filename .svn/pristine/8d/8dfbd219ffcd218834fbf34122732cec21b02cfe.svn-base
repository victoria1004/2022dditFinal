package kr.or.ddit.user.controller;

import java.util.HashMap;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;

import kr.or.ddit.user.service.AlarmService;
import kr.or.ddit.user.vo.MemberVO;
/**
 * 채팅,멘션,일감,메일,회의에 참여시 알림 메시지를 전달하는 컨트롤러
 * @author 정신애
 *
 */
@Controller
public class AlarmController {

	@Inject AlarmService service;
	
	
	/**
	 * 채팅,멘션,일감,메일,회의에 참여시 알림 insert
	 * @param sender 보내는 사람
	 * @param CategoryCd 알림 분류 번호(A01 : 채팅알림, A02 : 멘션알림, A03 : 일감알림, A04 : 메일알림, A05 : 회의알림)
	 * @param session 접속자 아이디 세팅값 (받는 사람)
	 * @return insert 성공 시 1 리턴
	 */
	public int insertAlarmMsg(String sender, String CategoryCd, HttpSession session) {
		MemberVO vo = (MemberVO) session.getAttribute("member");
		String mbrId = vo.getMbrId();
		
		Map<String, String> map = new HashMap<String, String>();
		map.put("alrmSndId", sender);
		map.put("alrmCtgrCd", CategoryCd);
		map.put("mbrId", mbrId);

		return service.insertAlarmMsg(map);
	}
	
	/**
	 * 알림메시지 확인 시 읽음으로 변경
	 * @param session 알림메시지 읽은 접속자
	 * @param alrmNo 읽은 메시지의 번호
	 * @return 업데이트 성공 시 1 리턴
	 */
	public int updateAlarmMsg(HttpSession session, String alrmNo) {
		MemberVO vo = (MemberVO) session.getAttribute("member");
		String mbrId = vo.getMbrId();

		Map<String, String> map = new HashMap<String, String>();
		map.put("alrmNo", alrmNo);
		map.put("mbrId", mbrId);
		return service.updateAlarmMsg(map);
	}
}
