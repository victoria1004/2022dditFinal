package kr.or.ddit.project.controller;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.collections.map.HashedMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.cloud.contoller.CloudController;
import kr.or.ddit.cloud.service.CloudService;
import kr.or.ddit.project.service.ProjectService;
import kr.or.ddit.project.vo.ProjectVO;
import kr.or.ddit.user.vo.MemberVO;


/**
 * 좌측 메뉴에서 선택한 프로젝트의 상세 페이지
 * @author 정신애
 *
 */
@RequestMapping("/project")
@Controller
public class ProjectController {
	
	@Inject CloudService cloudService;
	@Inject ProjectService service;

	private static final Logger logger = LoggerFactory.getLogger(ProjectController.class);
	private static final String pjtNo = "1"; //세션에서 세팅해주기
		/**
		 * 프로젝트 클릭 시 해당 프로젝트의 메인 페이지(상세 페이지)
		 * @param model
		 * @return 프로젝트 메인 뷰
		 */
		@GetMapping("/main.do")
		public String main(Model model) {
			
			int total = cloudService.getAllSz(pjtNo);
			logger.info("total:"+total);
			model.addAttribute("total", total);
			
			return "/project/main";
		}
		
		/**
		 * 프로젝트 메인 페이지 우측-해당 프로젝트의 구성원들 목록 출력
		 * @param pjtNo 메뉴에서 클릭한 프로젝트의 번호
		 * @return 해당 프로젝트의 구성원들 목록
		 */
		@ResponseBody
		@RequestMapping(value="/getAllMbr", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)
		public List<MemberVO> getAllMbr(@RequestParam String pjtNo, HttpServletRequest request, HttpServletResponse response, HttpSession session){
			
			Enumeration<String> sessionNames = session.getAttributeNames();
			List<MemberVO> list = service.getAllMbr(pjtNo);
			
			List<Map<String, Object>> rtnList = new ArrayList<Map<String,Object>>();
			
			System.out.println(sessionNames.hasMoreElements());
			while(sessionNames.hasMoreElements()) {
				String sessionKey = sessionNames.nextElement();
				System.out.println("sessionKey" + sessionKey);
				
				//세션에는 다양한 형태들이 저장될 거라서 우선 오브젝트로 받기
				Object data = session.getAttribute(sessionKey);
				System.out.println(data.toString());
				if(data instanceof MemberVO) {
					MemberVO member = (MemberVO) data;
					Map<String, Object> map = new HashMap<String, Object>();
					
					for(MemberVO vo : list) {
						
						if(member.getMbrId().equals(vo.getMbrId())){
							map.put("onlineVO", vo);
							System.out.println("suc!!");
							break;
						} else {
							map.put("offlineVO", vo);
						}
					}
					rtnList.add(map);
					System.out.println("1>>>" + rtnList.toString());
				}
				
				
			}
			for(Map<String, Object> map2 : rtnList) {
				System.out.println("2>>>" + map2.get("onlineVO").toString());
				System.out.println("3>>>" + map2.get("offlineVO").toString());
				
			}
			return list;
		}
		
		/**
		 * 접속한 사용자가 참여 중인 프로젝트 목록 
		 * @param mbrId 접속한 사용자
		 * @return 참여 중인 프로젝트 목록
		 */
		@ResponseBody
		@GetMapping("/getMyPjtList")
		public List<ProjectVO> getMyPjtList(@RequestParam String mbrId){
			return service.getMyPjtList(mbrId);
		}
		
		
		
		
		
		
}


